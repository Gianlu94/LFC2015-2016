Terminals unused in grammar

   FLOAT_T
   FLOAT_V
   ARGS
   RECORD


Grammatica

    0 $accept: program $end

    1 program: opt_proc_list MAIN LCURLY opt_stmt_list RCURLY

    2 dec: type VARIABLE SEMICOLON
    3    | type CONST VARIABLE EQUALS expr

    4 $@1: %empty

    5 type: B $@1 C

    6 C: %empty
    7  | LBRACK INTEGER_V RBRACK C

    8 opt_stmt_list: %empty
    9              | stmt_list

   10 opt_proc_list: %empty
   11              | proc_list

   12 proc_list: proc
   13          | proc_list proc

   14 proc: opt_type VARIABLE LP form RP LCURLY opt_stmt_list RCURLY

   15 opt_type: %empty
   16         | B

   17 B: INT_T
   18  | BOOL_T

   19 form: %empty
   20     | form_list

   21 form_list: param
   22          | form COMMA param

   23 param: B VARIABLE

   24 opt_actual_expr: %empty
   25                | actual_expr

   26 actual_expr: expr
   27            | actual_expr COMMA expr

   28 stmt: SEMICOLON
   29     | dec
   30     | expr SEMICOLON
   31     | PRINT expr SEMICOLON
   32     | VARIABLE EQUALS expr SEMICOLON
   33     | WHILE LP expr RP stmt
   34     | IF LP expr RP stmt
   35     | IF LP expr RP stmt ELSE stmt
   36     | FOR LP VARIABLE EQUALS expr TO expr RP stmt
   37     | LCURLY stmt_list RCURLY

   38 stmt_list: stmt
   39          | stmt_list stmt

   40 expr: INTEGER_V
   41     | BOOLEAN_V
   42     | EVAL VARIABLE LP opt_actual_expr RP
   43     | VARIABLE
   44     | MINUS expr
   45     | expr PLUS expr
   46     | expr MINUS expr
   47     | expr MULTIPLY expr
   48     | expr DIVIDE expr
   49     | expr LT expr
   50     | expr GT expr
   51     | expr GE expr
   52     | expr LE expr
   53     | expr NE expr
   54     | expr EQ expr
   55     | LP expr RP


Simboli terminali e regole in cui appaiono

$end (0) 0
error (256)
INT_T (258) 17
FLOAT_T (259)
BOOL_T (260) 18
INTEGER_V (261) 7 40
BOOLEAN_V (262) 41
FLOAT_V (263)
VARIABLE (264) 2 3 14 23 32 36 42 43
WHILE (265) 33
IF (266) 34 35
PRINT (267) 31
FOR (268) 36
TO (269) 36
IFX (270)
ARGS (271)
ELSE (272) 35
CONST (273) 3
RECORD (274)
GE (275) 51
LE (276) 52
EQ (277) 54
NE (278) 53
LT (279) 49
GT (280) 50
PLUS (281) 45
MINUS (282) 44 46
MULTIPLY (283) 47
DIVIDE (284) 48
EQUALS (285) 3 32 36
UMINUS (286)
RCURLY (287) 1 14 37
LCURLY (288) 1 14 37
COMMA (289) 22 27
SEMICOLON (290) 2 28 30 31 32
MAIN (291) 1
RBRACK (292) 7
LBRACK (293) 7
EVAL (294) 42
LP (295) 14 33 34 35 36 42 55
RP (296) 14 33 34 35 36 42 55


Simboli nonterminali e regole in cui appaiono

$accept (42)
    nel primo membro: 0
program (43)
    nel primo membro: 1, nel secondo membro: 0
dec (44)
    nel primo membro: 2 3, nel secondo membro: 29
type (45)
    nel primo membro: 5, nel secondo membro: 2 3
$@1 (46)
    nel primo membro: 4, nel secondo membro: 5
C (47)
    nel primo membro: 6 7, nel secondo membro: 5 7
opt_stmt_list (48)
    nel primo membro: 8 9, nel secondo membro: 1 14
opt_proc_list (49)
    nel primo membro: 10 11, nel secondo membro: 1
proc_list (50)
    nel primo membro: 12 13, nel secondo membro: 11 13
proc (51)
    nel primo membro: 14, nel secondo membro: 12 13
opt_type (52)
    nel primo membro: 15 16, nel secondo membro: 14
B (53)
    nel primo membro: 17 18, nel secondo membro: 5 16 23
form (54)
    nel primo membro: 19 20, nel secondo membro: 14 22
form_list (55)
    nel primo membro: 21 22, nel secondo membro: 20
param (56)
    nel primo membro: 23, nel secondo membro: 21 22
opt_actual_expr (57)
    nel primo membro: 24 25, nel secondo membro: 42
actual_expr (58)
    nel primo membro: 26 27, nel secondo membro: 25 27
stmt (59)
    nel primo membro: 28 29 30 31 32 33 34 35 36 37, nel secondo membro:
    33 34 35 36 38 39
stmt_list (60)
    nel primo membro: 38 39, nel secondo membro: 9 37 39
expr (61)
    nel primo membro: 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54
    55, nel secondo membro: 3 26 27 30 31 32 33 34 35 36 44 45 46 47
    48 49 50 51 52 53 54 55


Stato 0

    0 $accept: . program $end

    INT_T   shift e prosecuzione allo stato 1
    BOOL_T  shift e prosecuzione allo stato 2

    VARIABLE  riduzione con la regola 15 (opt_type)
    $default  riduzione con la regola 10 (opt_proc_list)

    program        prosecuzione allo stato 3
    opt_proc_list  prosecuzione allo stato 4
    proc_list      prosecuzione allo stato 5
    proc           prosecuzione allo stato 6
    opt_type       prosecuzione allo stato 7
    B              prosecuzione allo stato 8


Stato 1

   17 B: INT_T .

    $default  riduzione con la regola 17 (B)


Stato 2

   18 B: BOOL_T .

    $default  riduzione con la regola 18 (B)


Stato 3

    0 $accept: program . $end

    $end  shift e prosecuzione allo stato 9


Stato 4

    1 program: opt_proc_list . MAIN LCURLY opt_stmt_list RCURLY

    MAIN  shift e prosecuzione allo stato 10


Stato 5

   11 opt_proc_list: proc_list .
   13 proc_list: proc_list . proc

    INT_T   shift e prosecuzione allo stato 1
    BOOL_T  shift e prosecuzione allo stato 2

    VARIABLE  riduzione con la regola 15 (opt_type)
    $default  riduzione con la regola 11 (opt_proc_list)

    proc      prosecuzione allo stato 11
    opt_type  prosecuzione allo stato 7
    B         prosecuzione allo stato 8


Stato 6

   12 proc_list: proc .

    $default  riduzione con la regola 12 (proc_list)


Stato 7

   14 proc: opt_type . VARIABLE LP form RP LCURLY opt_stmt_list RCURLY

    VARIABLE  shift e prosecuzione allo stato 12


Stato 8

   16 opt_type: B .

    $default  riduzione con la regola 16 (opt_type)


Stato 9

    0 $accept: program $end .

    $default  accetta


Stato 10

    1 program: opt_proc_list MAIN . LCURLY opt_stmt_list RCURLY

    LCURLY  shift e prosecuzione allo stato 13


Stato 11

   13 proc_list: proc_list proc .

    $default  riduzione con la regola 13 (proc_list)


Stato 12

   14 proc: opt_type VARIABLE . LP form RP LCURLY opt_stmt_list RCURLY

    LP  shift e prosecuzione allo stato 14


Stato 13

    1 program: opt_proc_list MAIN LCURLY . opt_stmt_list RCURLY

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    $default  riduzione con la regola 8 (opt_stmt_list)

    dec            prosecuzione allo stato 27
    type           prosecuzione allo stato 28
    opt_stmt_list  prosecuzione allo stato 29
    B              prosecuzione allo stato 30
    stmt           prosecuzione allo stato 31
    stmt_list      prosecuzione allo stato 32
    expr           prosecuzione allo stato 33


Stato 14

   14 proc: opt_type VARIABLE LP . form RP LCURLY opt_stmt_list RCURLY

    INT_T   shift e prosecuzione allo stato 1
    BOOL_T  shift e prosecuzione allo stato 2

    $default  riduzione con la regola 19 (form)

    B          prosecuzione allo stato 34
    form       prosecuzione allo stato 35
    form_list  prosecuzione allo stato 36
    param      prosecuzione allo stato 37


Stato 15

   40 expr: INTEGER_V .

    $default  riduzione con la regola 40 (expr)


Stato 16

   41 expr: BOOLEAN_V .

    $default  riduzione con la regola 41 (expr)


Stato 17

   32 stmt: VARIABLE . EQUALS expr SEMICOLON
   43 expr: VARIABLE .

    EQUALS  shift e prosecuzione allo stato 38

    $default  riduzione con la regola 43 (expr)


Stato 18

   33 stmt: WHILE . LP expr RP stmt

    LP  shift e prosecuzione allo stato 39


Stato 19

   34 stmt: IF . LP expr RP stmt
   35     | IF . LP expr RP stmt ELSE stmt

    LP  shift e prosecuzione allo stato 40


Stato 20

   31 stmt: PRINT . expr SEMICOLON

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 42


Stato 21

   36 stmt: FOR . LP VARIABLE EQUALS expr TO expr RP stmt

    LP  shift e prosecuzione allo stato 43


Stato 22

   44 expr: MINUS . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 44


Stato 23

   37 stmt: LCURLY . stmt_list RCURLY

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    dec        prosecuzione allo stato 27
    type       prosecuzione allo stato 28
    B          prosecuzione allo stato 30
    stmt       prosecuzione allo stato 31
    stmt_list  prosecuzione allo stato 45
    expr       prosecuzione allo stato 33


Stato 24

   28 stmt: SEMICOLON .

    $default  riduzione con la regola 28 (stmt)


Stato 25

   42 expr: EVAL . VARIABLE LP opt_actual_expr RP

    VARIABLE  shift e prosecuzione allo stato 46


Stato 26

   55 expr: LP . expr RP

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 47


Stato 27

   29 stmt: dec .

    $default  riduzione con la regola 29 (stmt)


Stato 28

    2 dec: type . VARIABLE SEMICOLON
    3    | type . CONST VARIABLE EQUALS expr

    VARIABLE  shift e prosecuzione allo stato 48
    CONST     shift e prosecuzione allo stato 49


Stato 29

    1 program: opt_proc_list MAIN LCURLY opt_stmt_list . RCURLY

    RCURLY  shift e prosecuzione allo stato 50


Stato 30

    5 type: B . $@1 C

    $default  riduzione con la regola 4 ($@1)

    $@1  prosecuzione allo stato 51


Stato 31

   38 stmt_list: stmt .

    $default  riduzione con la regola 38 (stmt_list)


Stato 32

    9 opt_stmt_list: stmt_list .
   39 stmt_list: stmt_list . stmt

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    $default  riduzione con la regola 9 (opt_stmt_list)

    dec   prosecuzione allo stato 27
    type  prosecuzione allo stato 28
    B     prosecuzione allo stato 30
    stmt  prosecuzione allo stato 52
    expr  prosecuzione allo stato 33


Stato 33

   30 stmt: expr . SEMICOLON
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE         shift e prosecuzione allo stato 53
    LE         shift e prosecuzione allo stato 54
    EQ         shift e prosecuzione allo stato 55
    NE         shift e prosecuzione allo stato 56
    LT         shift e prosecuzione allo stato 57
    GT         shift e prosecuzione allo stato 58
    PLUS       shift e prosecuzione allo stato 59
    MINUS      shift e prosecuzione allo stato 60
    MULTIPLY   shift e prosecuzione allo stato 61
    DIVIDE     shift e prosecuzione allo stato 62
    SEMICOLON  shift e prosecuzione allo stato 63


Stato 34

   23 param: B . VARIABLE

    VARIABLE  shift e prosecuzione allo stato 64


Stato 35

   14 proc: opt_type VARIABLE LP form . RP LCURLY opt_stmt_list RCURLY
   22 form_list: form . COMMA param

    COMMA  shift e prosecuzione allo stato 65
    RP     shift e prosecuzione allo stato 66


Stato 36

   20 form: form_list .

    $default  riduzione con la regola 20 (form)


Stato 37

   21 form_list: param .

    $default  riduzione con la regola 21 (form_list)


Stato 38

   32 stmt: VARIABLE EQUALS . expr SEMICOLON

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 67


Stato 39

   33 stmt: WHILE LP . expr RP stmt

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 68


Stato 40

   34 stmt: IF LP . expr RP stmt
   35     | IF LP . expr RP stmt ELSE stmt

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 69


Stato 41

   43 expr: VARIABLE .

    $default  riduzione con la regola 43 (expr)


Stato 42

   31 stmt: PRINT expr . SEMICOLON
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE         shift e prosecuzione allo stato 53
    LE         shift e prosecuzione allo stato 54
    EQ         shift e prosecuzione allo stato 55
    NE         shift e prosecuzione allo stato 56
    LT         shift e prosecuzione allo stato 57
    GT         shift e prosecuzione allo stato 58
    PLUS       shift e prosecuzione allo stato 59
    MINUS      shift e prosecuzione allo stato 60
    MULTIPLY   shift e prosecuzione allo stato 61
    DIVIDE     shift e prosecuzione allo stato 62
    SEMICOLON  shift e prosecuzione allo stato 70


Stato 43

   36 stmt: FOR LP . VARIABLE EQUALS expr TO expr RP stmt

    VARIABLE  shift e prosecuzione allo stato 71


Stato 44

   44 expr: MINUS expr .
   45     | expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    $default  riduzione con la regola 44 (expr)


Stato 45

   37 stmt: LCURLY stmt_list . RCURLY
   39 stmt_list: stmt_list . stmt

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    RCURLY     shift e prosecuzione allo stato 72
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    dec   prosecuzione allo stato 27
    type  prosecuzione allo stato 28
    B     prosecuzione allo stato 30
    stmt  prosecuzione allo stato 52
    expr  prosecuzione allo stato 33


Stato 46

   42 expr: EVAL VARIABLE . LP opt_actual_expr RP

    LP  shift e prosecuzione allo stato 73


Stato 47

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   55     | LP expr . RP

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62
    RP        shift e prosecuzione allo stato 74


Stato 48

    2 dec: type VARIABLE . SEMICOLON

    SEMICOLON  shift e prosecuzione allo stato 75


Stato 49

    3 dec: type CONST . VARIABLE EQUALS expr

    VARIABLE  shift e prosecuzione allo stato 76


Stato 50

    1 program: opt_proc_list MAIN LCURLY opt_stmt_list RCURLY .

    $default  riduzione con la regola 1 (program)


Stato 51

    5 type: B $@1 . C

    LBRACK  shift e prosecuzione allo stato 77

    $default  riduzione con la regola 6 (C)

    C  prosecuzione allo stato 78


Stato 52

   39 stmt_list: stmt_list stmt .

    $default  riduzione con la regola 39 (stmt_list)


Stato 53

   51 expr: expr GE . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 79


Stato 54

   52 expr: expr LE . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 80


Stato 55

   54 expr: expr EQ . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 81


Stato 56

   53 expr: expr NE . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 82


Stato 57

   49 expr: expr LT . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 83


Stato 58

   50 expr: expr GT . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 84


Stato 59

   45 expr: expr PLUS . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 85


Stato 60

   46 expr: expr MINUS . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 86


Stato 61

   47 expr: expr MULTIPLY . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 87


Stato 62

   48 expr: expr DIVIDE . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 88


Stato 63

   30 stmt: expr SEMICOLON .

    $default  riduzione con la regola 30 (stmt)


Stato 64

   23 param: B VARIABLE .

    $default  riduzione con la regola 23 (param)


Stato 65

   22 form_list: form COMMA . param

    INT_T   shift e prosecuzione allo stato 1
    BOOL_T  shift e prosecuzione allo stato 2

    B      prosecuzione allo stato 34
    param  prosecuzione allo stato 89


Stato 66

   14 proc: opt_type VARIABLE LP form RP . LCURLY opt_stmt_list RCURLY

    LCURLY  shift e prosecuzione allo stato 90


Stato 67

   32 stmt: VARIABLE EQUALS expr . SEMICOLON
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE         shift e prosecuzione allo stato 53
    LE         shift e prosecuzione allo stato 54
    EQ         shift e prosecuzione allo stato 55
    NE         shift e prosecuzione allo stato 56
    LT         shift e prosecuzione allo stato 57
    GT         shift e prosecuzione allo stato 58
    PLUS       shift e prosecuzione allo stato 59
    MINUS      shift e prosecuzione allo stato 60
    MULTIPLY   shift e prosecuzione allo stato 61
    DIVIDE     shift e prosecuzione allo stato 62
    SEMICOLON  shift e prosecuzione allo stato 91


Stato 68

   33 stmt: WHILE LP expr . RP stmt
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62
    RP        shift e prosecuzione allo stato 92


Stato 69

   34 stmt: IF LP expr . RP stmt
   35     | IF LP expr . RP stmt ELSE stmt
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62
    RP        shift e prosecuzione allo stato 93


Stato 70

   31 stmt: PRINT expr SEMICOLON .

    $default  riduzione con la regola 31 (stmt)


Stato 71

   36 stmt: FOR LP VARIABLE . EQUALS expr TO expr RP stmt

    EQUALS  shift e prosecuzione allo stato 94


Stato 72

   37 stmt: LCURLY stmt_list RCURLY .

    $default  riduzione con la regola 37 (stmt)


Stato 73

   42 expr: EVAL VARIABLE LP . opt_actual_expr RP

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    $default  riduzione con la regola 24 (opt_actual_expr)

    opt_actual_expr  prosecuzione allo stato 95
    actual_expr      prosecuzione allo stato 96
    expr             prosecuzione allo stato 97


Stato 74

   55 expr: LP expr RP .

    $default  riduzione con la regola 55 (expr)


Stato 75

    2 dec: type VARIABLE SEMICOLON .

    $default  riduzione con la regola 2 (dec)


Stato 76

    3 dec: type CONST VARIABLE . EQUALS expr

    EQUALS  shift e prosecuzione allo stato 98


Stato 77

    7 C: LBRACK . INTEGER_V RBRACK C

    INTEGER_V  shift e prosecuzione allo stato 99


Stato 78

    5 type: B $@1 C .

    $default  riduzione con la regola 5 (type)


Stato 79

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   51     | expr GE expr .
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 51 (expr)


Stato 80

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   52     | expr LE expr .
   53     | expr . NE expr
   54     | expr . EQ expr

    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 52 (expr)


Stato 81

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr
   54     | expr EQ expr .

    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 54 (expr)


Stato 82

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   53     | expr NE expr .
   54     | expr . EQ expr

    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 53 (expr)


Stato 83

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   49     | expr LT expr .
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 49 (expr)


Stato 84

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   50     | expr GT expr .
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 50 (expr)


Stato 85

   45 expr: expr . PLUS expr
   45     | expr PLUS expr .
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 45 (expr)


Stato 86

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   46     | expr MINUS expr .
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 46 (expr)


Stato 87

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   47     | expr MULTIPLY expr .
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    $default  riduzione con la regola 47 (expr)


Stato 88

   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   48     | expr DIVIDE expr .
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    $default  riduzione con la regola 48 (expr)


Stato 89

   22 form_list: form COMMA param .

    $default  riduzione con la regola 22 (form_list)


Stato 90

   14 proc: opt_type VARIABLE LP form RP LCURLY . opt_stmt_list RCURLY

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    $default  riduzione con la regola 8 (opt_stmt_list)

    dec            prosecuzione allo stato 27
    type           prosecuzione allo stato 28
    opt_stmt_list  prosecuzione allo stato 100
    B              prosecuzione allo stato 30
    stmt           prosecuzione allo stato 31
    stmt_list      prosecuzione allo stato 32
    expr           prosecuzione allo stato 33


Stato 91

   32 stmt: VARIABLE EQUALS expr SEMICOLON .

    $default  riduzione con la regola 32 (stmt)


Stato 92

   33 stmt: WHILE LP expr RP . stmt

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    dec   prosecuzione allo stato 27
    type  prosecuzione allo stato 28
    B     prosecuzione allo stato 30
    stmt  prosecuzione allo stato 101
    expr  prosecuzione allo stato 33


Stato 93

   34 stmt: IF LP expr RP . stmt
   35     | IF LP expr RP . stmt ELSE stmt

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    dec   prosecuzione allo stato 27
    type  prosecuzione allo stato 28
    B     prosecuzione allo stato 30
    stmt  prosecuzione allo stato 102
    expr  prosecuzione allo stato 33


Stato 94

   36 stmt: FOR LP VARIABLE EQUALS . expr TO expr RP stmt

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 103


Stato 95

   42 expr: EVAL VARIABLE LP opt_actual_expr . RP

    RP  shift e prosecuzione allo stato 104


Stato 96

   25 opt_actual_expr: actual_expr .
   27 actual_expr: actual_expr . COMMA expr

    COMMA  shift e prosecuzione allo stato 105

    $default  riduzione con la regola 25 (opt_actual_expr)


Stato 97

   26 actual_expr: expr .
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 26 (actual_expr)


Stato 98

    3 dec: type CONST VARIABLE EQUALS . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 106


Stato 99

    7 C: LBRACK INTEGER_V . RBRACK C

    RBRACK  shift e prosecuzione allo stato 107


Stato 100

   14 proc: opt_type VARIABLE LP form RP LCURLY opt_stmt_list . RCURLY

    RCURLY  shift e prosecuzione allo stato 108


Stato 101

   33 stmt: WHILE LP expr RP stmt .

    $default  riduzione con la regola 33 (stmt)


Stato 102

   34 stmt: IF LP expr RP stmt .
   35     | IF LP expr RP stmt . ELSE stmt

    ELSE  shift e prosecuzione allo stato 109

    $default  riduzione con la regola 34 (stmt)


Stato 103

   36 stmt: FOR LP VARIABLE EQUALS expr . TO expr RP stmt
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    TO        shift e prosecuzione allo stato 110
    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62


Stato 104

   42 expr: EVAL VARIABLE LP opt_actual_expr RP .

    $default  riduzione con la regola 42 (expr)


Stato 105

   27 actual_expr: actual_expr COMMA . expr

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 111


Stato 106

    3 dec: type CONST VARIABLE EQUALS expr .
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 3 (dec)


Stato 107

    7 C: LBRACK INTEGER_V RBRACK . C

    LBRACK  shift e prosecuzione allo stato 77

    $default  riduzione con la regola 6 (C)

    C  prosecuzione allo stato 112


Stato 108

   14 proc: opt_type VARIABLE LP form RP LCURLY opt_stmt_list RCURLY .

    $default  riduzione con la regola 14 (proc)


Stato 109

   35 stmt: IF LP expr RP stmt ELSE . stmt

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    dec   prosecuzione allo stato 27
    type  prosecuzione allo stato 28
    B     prosecuzione allo stato 30
    stmt  prosecuzione allo stato 113
    expr  prosecuzione allo stato 33


Stato 110

   36 stmt: FOR LP VARIABLE EQUALS expr TO . expr RP stmt

    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 41
    MINUS      shift e prosecuzione allo stato 22
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    expr  prosecuzione allo stato 114


Stato 111

   27 actual_expr: actual_expr COMMA expr .
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62

    $default  riduzione con la regola 27 (actual_expr)


Stato 112

    7 C: LBRACK INTEGER_V RBRACK C .

    $default  riduzione con la regola 7 (C)


Stato 113

   35 stmt: IF LP expr RP stmt ELSE stmt .

    $default  riduzione con la regola 35 (stmt)


Stato 114

   36 stmt: FOR LP VARIABLE EQUALS expr TO expr . RP stmt
   45 expr: expr . PLUS expr
   46     | expr . MINUS expr
   47     | expr . MULTIPLY expr
   48     | expr . DIVIDE expr
   49     | expr . LT expr
   50     | expr . GT expr
   51     | expr . GE expr
   52     | expr . LE expr
   53     | expr . NE expr
   54     | expr . EQ expr

    GE        shift e prosecuzione allo stato 53
    LE        shift e prosecuzione allo stato 54
    EQ        shift e prosecuzione allo stato 55
    NE        shift e prosecuzione allo stato 56
    LT        shift e prosecuzione allo stato 57
    GT        shift e prosecuzione allo stato 58
    PLUS      shift e prosecuzione allo stato 59
    MINUS     shift e prosecuzione allo stato 60
    MULTIPLY  shift e prosecuzione allo stato 61
    DIVIDE    shift e prosecuzione allo stato 62
    RP        shift e prosecuzione allo stato 115


Stato 115

   36 stmt: FOR LP VARIABLE EQUALS expr TO expr RP . stmt

    INT_T      shift e prosecuzione allo stato 1
    BOOL_T     shift e prosecuzione allo stato 2
    INTEGER_V  shift e prosecuzione allo stato 15
    BOOLEAN_V  shift e prosecuzione allo stato 16
    VARIABLE   shift e prosecuzione allo stato 17
    WHILE      shift e prosecuzione allo stato 18
    IF         shift e prosecuzione allo stato 19
    PRINT      shift e prosecuzione allo stato 20
    FOR        shift e prosecuzione allo stato 21
    MINUS      shift e prosecuzione allo stato 22
    LCURLY     shift e prosecuzione allo stato 23
    SEMICOLON  shift e prosecuzione allo stato 24
    EVAL       shift e prosecuzione allo stato 25
    LP         shift e prosecuzione allo stato 26

    dec   prosecuzione allo stato 27
    type  prosecuzione allo stato 28
    B     prosecuzione allo stato 30
    stmt  prosecuzione allo stato 116
    expr  prosecuzione allo stato 33


Stato 116

   36 stmt: FOR LP VARIABLE EQUALS expr TO expr RP stmt .

    $default  riduzione con la regola 36 (stmt)
